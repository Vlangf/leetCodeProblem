# Longest Harmonious Subsequence
# We define a harmonious array as an array where the difference between its maximum value
# and its minimum value is exactly 1.
# Given an integer array nums, return the length of its longest harmonious
# subsequence among all its possible subsequences.
# A subsequence of array is a sequence that can be derived from the array by deleting some or
# no elements without changing the order of the remaining elements.
from typing import List
from collections import Counter
from metrics import benc_time


@benc_time
def findLHS(nums: List[int]) -> int:
    nums_dict = Counter(nums)
    max_len = 0
    for k, v in nums_dict.items():
        if k + 1 in nums_dict:
            max_len = max(max_len, nums_dict[k + 1] + v)

    return max_len


@benc_time
def findLHS_two(nums: List[int]) -> int:
    nums.sort()
    max_len = 0
    for i in range(1, len(nums)):
        if nums[i] == nums[i - 1] + 1:
            max_len = max(max_len, nums.count(nums[i]) + nums.count(nums[i - 1]))

    return max_len


print(findLHS_two(
    [1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3,
     2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7,
     1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3,
     2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7,
     1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3,
     2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7,
     1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3,
     2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7,
     1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3,
     2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7,
     1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2,
     3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2,
     5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7, 1, 3, 2, 2, 5, 2, 3, 7]))
